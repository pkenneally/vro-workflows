<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="getVraIaaSMachine" result-type="Any" api-version="6.0.0" id="065fc313-cbd5-471f-aaab-1190cff0008d" version="0.1.0" allowed-operations="vfe" category-name="org.custom.library.vra.iaas.machine">
  <description><![CDATA[Returns a JSON object containing all iaas machine details]]></description>
  <param n="machineName" t="string"><![CDATA[Name of project (oData filter)]]></param>
  <param n="cspApiUrl" t="string"><![CDATA[VMware Cloud Services API service URL]]></param>
  <param n="cspOpMethod" t="string"><![CDATA[VMware Cloud Services API Method]]></param>
  <param n="cspOpContentType" t="string"><![CDATA[VMware Cloud Services AP Method Content Type]]></param>
  <param n="apiVersion" t="string"><![CDATA[]]></param>
  <param n="actionFolderPath" t="string"><![CDATA[]]></param>
  <script encoded="false"><![CDATA[// get action name for debug
var actionName = arguments.callee.name.substr(6);
try{ System.debug("[action-start] Starting action '"+actionName+"'"); var timeStart = new Date().getTime(); return main(); }
finally{ System.debug("[action-end] Finished action '"+actionName+"' in "+(new Date().getTime()-timeStart)+"ms"); }

// test frank
// main of the action
function main() {

    if( !actionFolderPath){
            throw "Invalid vRO action folder path arguments";
    }

    if( !machineName){
            throw "Invalid arguments";
    }
    
    if(!cspApiUrl){
        cspApiUrl = "/iaas/api/machines?$filter=name";
	}
    
    if(!cspOpMethod){
		cspOpMethod = "GET";
	}

    if(!cspOpContentType){
        cspOpContentType = "application/json"
    }
    
    if(!apiVersion){
        apiVersion = "2019-01-15"
    }

    try{

        const cspOpUrl = cspApiUrl + encodeURIComponent(" eq ") + "'{0}'" + "&apiVersion={1}";

        var cspUrlParamValues = [encodeURIComponent(machineName),apiVersion];
        
        var opResponse = System.getModule("org.custom.library.vra").vraRest(cspOpUrl, cspOpMethod, cspOpContentType, cspUrlParamValues, null, actionFolderPath, false)

        //System.debug(opResponse.responseString);

        if (JSON.parse(opResponse.responseString).totalElements != 1 ) {
            throw "More than one machine found with name '" + machineName + "'";
        }

        return JSON.parse(opResponse.responseString).content[0];
    }
    catch (ex){
        throw "Failed to found machine with name "+ machineName +"(" + ex.statusCode + " Error). Details: " + ex.message;
    }
}

///////////////////////////////	 functions here ///////////////////////////////	
]]></script>
</dunes-script-module>